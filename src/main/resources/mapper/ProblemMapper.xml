<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.simon.oj.dao.ProblemMapper">
  <resultMap id="BaseResultMap" type="com.simon.oj.pojo.Problem">
    <id column="idproblem" jdbcType="INTEGER" property="idproblem" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="input" jdbcType="VARCHAR" property="input" />
    <result column="output" jdbcType="VARCHAR" property="output" />
    <result column="committed" jdbcType="INTEGER" property="committed" />
    <result column="passed" jdbcType="INTEGER" property="passed" />
    <result column="tag" jdbcType="VARCHAR" property="tag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    idproblem, title, description, input, output, committed, passed, tag
  </sql>
  <select id="selectByExample" parameterType="com.simon.oj.pojo.ProblemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from problem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from problem
    where idproblem = #{idproblem,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from problem
    where idproblem = #{idproblem,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.simon.oj.pojo.ProblemExample">
    delete from problem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="idproblem" keyProperty="idproblem" parameterType="com.simon.oj.pojo.Problem" useGeneratedKeys="true">
    insert into problem (title, description, input, 
      output, committed, passed, 
      tag)
    values (#{title,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{input,jdbcType=VARCHAR}, 
      #{output,jdbcType=VARCHAR}, #{committed,jdbcType=INTEGER}, #{passed,jdbcType=INTEGER}, 
      #{tag,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="idproblem" keyProperty="idproblem" parameterType="com.simon.oj.pojo.Problem" useGeneratedKeys="true">
    insert into problem
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="input != null">
        input,
      </if>
      <if test="output != null">
        output,
      </if>
      <if test="committed != null">
        committed,
      </if>
      <if test="passed != null">
        passed,
      </if>
      <if test="tag != null">
        tag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="input != null">
        #{input,jdbcType=VARCHAR},
      </if>
      <if test="output != null">
        #{output,jdbcType=VARCHAR},
      </if>
      <if test="committed != null">
        #{committed,jdbcType=INTEGER},
      </if>
      <if test="passed != null">
        #{passed,jdbcType=INTEGER},
      </if>
      <if test="tag != null">
        #{tag,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.simon.oj.pojo.ProblemExample" resultType="java.lang.Long">
    select count(*) from problem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update problem
    <set>
      <if test="record.idproblem != null">
        idproblem = #{record.idproblem,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.input != null">
        input = #{record.input,jdbcType=VARCHAR},
      </if>
      <if test="record.output != null">
        output = #{record.output,jdbcType=VARCHAR},
      </if>
      <if test="record.committed != null">
        committed = #{record.committed,jdbcType=INTEGER},
      </if>
      <if test="record.passed != null">
        passed = #{record.passed,jdbcType=INTEGER},
      </if>
      <if test="record.tag != null">
        tag = #{record.tag,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update problem
    set idproblem = #{record.idproblem,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      input = #{record.input,jdbcType=VARCHAR},
      output = #{record.output,jdbcType=VARCHAR},
      committed = #{record.committed,jdbcType=INTEGER},
      passed = #{record.passed,jdbcType=INTEGER},
      tag = #{record.tag,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.simon.oj.pojo.Problem">
    update problem
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="input != null">
        input = #{input,jdbcType=VARCHAR},
      </if>
      <if test="output != null">
        output = #{output,jdbcType=VARCHAR},
      </if>
      <if test="committed != null">
        committed = #{committed,jdbcType=INTEGER},
      </if>
      <if test="passed != null">
        passed = #{passed,jdbcType=INTEGER},
      </if>
      <if test="tag != null">
        tag = #{tag,jdbcType=VARCHAR},
      </if>
    </set>
    where idproblem = #{idproblem,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.simon.oj.pojo.Problem">
    update problem
    set title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      input = #{input,jdbcType=VARCHAR},
      output = #{output,jdbcType=VARCHAR},
      committed = #{committed,jdbcType=INTEGER},
      passed = #{passed,jdbcType=INTEGER},
      tag = #{tag,jdbcType=VARCHAR}
    where idproblem = #{idproblem,jdbcType=INTEGER}
  </update>
</mapper>