<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.simon.oj.dao.ClassMapper">
  <resultMap id="BaseResultMap" type="com.simon.oj.pojo.Class">
    <id column="idclass" jdbcType="INTEGER" property="idclass" />
    <result column="classname" jdbcType="VARCHAR" property="classname" />
    <result column="idteacher" jdbcType="VARCHAR" property="idteacher" />
    <result column="semester" jdbcType="VARCHAR" property="semester" />
    <result column="stu_amount" jdbcType="INTEGER" property="stuAmount" />
    <result column="opendate" jdbcType="TIMESTAMP" property="opendate" />
    <result column="closedate" jdbcType="TIMESTAMP" property="closedate" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    idclass, classname, idteacher, semester, stu_amount, opendate, closedate, status
  </sql>
  <select id="selectByExample" parameterType="com.simon.oj.pojo.ClassExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from class
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from class
    where idclass = #{idclass,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from class
    where idclass = #{idclass,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.simon.oj.pojo.ClassExample">
    delete from class
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="idclass" keyProperty="idclass" parameterType="com.simon.oj.pojo.Class" useGeneratedKeys="true">
    insert into class (classname, idteacher, semester, 
      stu_amount, opendate, closedate, 
      status)
    values (#{classname,jdbcType=VARCHAR}, #{idteacher,jdbcType=VARCHAR}, #{semester,jdbcType=VARCHAR}, 
      #{stuAmount,jdbcType=INTEGER}, #{opendate,jdbcType=TIMESTAMP}, #{closedate,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="idclass" keyProperty="idclass" parameterType="com.simon.oj.pojo.Class" useGeneratedKeys="true">
    insert into class
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="classname != null">
        classname,
      </if>
      <if test="idteacher != null">
        idteacher,
      </if>
      <if test="semester != null">
        semester,
      </if>
      <if test="stuAmount != null">
        stu_amount,
      </if>
      <if test="opendate != null">
        opendate,
      </if>
      <if test="closedate != null">
        closedate,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="classname != null">
        #{classname,jdbcType=VARCHAR},
      </if>
      <if test="idteacher != null">
        #{idteacher,jdbcType=VARCHAR},
      </if>
      <if test="semester != null">
        #{semester,jdbcType=VARCHAR},
      </if>
      <if test="stuAmount != null">
        #{stuAmount,jdbcType=INTEGER},
      </if>
      <if test="opendate != null">
        #{opendate,jdbcType=TIMESTAMP},
      </if>
      <if test="closedate != null">
        #{closedate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.simon.oj.pojo.ClassExample" resultType="java.lang.Long">
    select count(*) from class
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update class
    <set>
      <if test="record.idclass != null">
        idclass = #{record.idclass,jdbcType=INTEGER},
      </if>
      <if test="record.classname != null">
        classname = #{record.classname,jdbcType=VARCHAR},
      </if>
      <if test="record.idteacher != null">
        idteacher = #{record.idteacher,jdbcType=VARCHAR},
      </if>
      <if test="record.semester != null">
        semester = #{record.semester,jdbcType=VARCHAR},
      </if>
      <if test="record.stuAmount != null">
        stu_amount = #{record.stuAmount,jdbcType=INTEGER},
      </if>
      <if test="record.opendate != null">
        opendate = #{record.opendate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.closedate != null">
        closedate = #{record.closedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update class
    set idclass = #{record.idclass,jdbcType=INTEGER},
      classname = #{record.classname,jdbcType=VARCHAR},
      idteacher = #{record.idteacher,jdbcType=VARCHAR},
      semester = #{record.semester,jdbcType=VARCHAR},
      stu_amount = #{record.stuAmount,jdbcType=INTEGER},
      opendate = #{record.opendate,jdbcType=TIMESTAMP},
      closedate = #{record.closedate,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.simon.oj.pojo.Class">
    update class
    <set>
      <if test="classname != null">
        classname = #{classname,jdbcType=VARCHAR},
      </if>
      <if test="idteacher != null">
        idteacher = #{idteacher,jdbcType=VARCHAR},
      </if>
      <if test="semester != null">
        semester = #{semester,jdbcType=VARCHAR},
      </if>
      <if test="stuAmount != null">
        stu_amount = #{stuAmount,jdbcType=INTEGER},
      </if>
      <if test="opendate != null">
        opendate = #{opendate,jdbcType=TIMESTAMP},
      </if>
      <if test="closedate != null">
        closedate = #{closedate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where idclass = #{idclass,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.simon.oj.pojo.Class">
    update class
    set classname = #{classname,jdbcType=VARCHAR},
      idteacher = #{idteacher,jdbcType=VARCHAR},
      semester = #{semester,jdbcType=VARCHAR},
      stu_amount = #{stuAmount,jdbcType=INTEGER},
      opendate = #{opendate,jdbcType=TIMESTAMP},
      closedate = #{closedate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR}
    where idclass = #{idclass,jdbcType=INTEGER}
  </update>
</mapper>